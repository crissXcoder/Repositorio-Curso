:root {
    --azul: #0071b7;
    --blanco: #FFF;
    --naranja: #ff4f1e;
}

html {
    font-size: 62.5%; /** 1REM = 10pX **/
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}
  
body {
    background-color: var(--azul);
    font-family:  'Lato', sans-serif;
    font-size: 1.6rem;
}

h1, h2 {
    color: var(--blanco);
    text-align: center;
    margin: 5rem 0;
    padding: 1rem;
}
.caja-curso {
    background-color: var(--naranja);
    text-align: center;
    color: var(--blanco);
    padding: 5rem;
}
.caja-curso h1 {
    margin: 0;
}
.caja-curso p {
    font-size: 2.4rem;
}
.caja-curso a {
    font-size: 2.4rem;
    padding: 2rem;
    display: inline-block;
    text-decoration: none;
    color: var(--blanco);
    padding: 0;
}

.contenedor {
    max-width: 120rem;
    margin: 0 auto;
}
.box {
    background-color: var(--naranja);
    color: var(--blanco);
    padding: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 4rem;
    border: 1rem solid #bb2b03;
}

.contenedor > div {
    background-color: var(--blanco);
    padding: 5rem;
}

/** 1. Display Flex **/
/* 
 * La propiedad 'display: flex' convierte un elemento en un contenedor flex.
 * Esto permite usar las propiedades de Flexbox en sus elementos hijos directos.
 * Los elementos hijos se convierten en flex items y se alinean en una fila por defecto.
 */
.d-flex {
    display: flex;
}

/** 2. Flex Direction **/
/* 
 * 'flex-direction' controla la dirección principal del flujo de los flex items.
 * 'row-reverse' invierte el orden de los elementos, colocándolos de derecha a izquierda.
 * Otros valores posibles son: 'row' (por defecto), 'column', y 'column-reverse'.
 */
.d-flex-2 {
    display: flex;
    flex-direction: row-reverse;
}

/** 3. Justify Content (Dirección Row) **/
/* 
 * 'justify-content' alinea los flex items a lo largo del eje principal (horizontal en row).
 * 'space-between' distribuye los items uniformemente: el primer item al inicio, el último al final.
 * Otros valores: 'flex-start', 'flex-end', 'center', 'space-around', 'space-evenly'.
 */
.d-flex-3 {
    display: flex;
    justify-content: space-between;
}

/** 4. Justify Content (Dirección Column) **/
/* 
 * Cuando 'flex-direction' es 'column', el eje principal cambia a vertical.
 * 'justify-content' ahora alinea los items verticalmente.
 * 'space-between' distribuye los items verticalmente con espacio entre ellos.
 */
.d-flex-4 {
    display: flex;
    flex-direction: column;
    height: 1000px;
    justify-content: space-between;
}

/** 5. Align Items (Dirección Row) **/
/* 
 * 'align-items' alinea los flex items a lo largo del eje cruzado (vertical en row).
 * 'center' centra los items verticalmente en el contenedor.
 * Otros valores: 'flex-start', 'flex-end', 'stretch' (por defecto), 'baseline'.
 */
.d-flex-5 {
    display: flex;
    height: 700px;
    align-items: center;
}

/** 6. Align Items (Dirección Columna) **/
/* 
 * Con 'flex-direction: column', 'align-items' alinea horizontalmente.
 * 'center' centra los items horizontalmente en el contenedor.
 */
.d-flex-6 {
    display: flex;
    flex-direction: column;
    height: 800px;
    align-items: center;
} 

/** 7 y 7.5. Combinación de Justify Content y Align Items **/
/* 
 * Se pueden combinar 'justify-content' y 'align-items' para un control preciso.
 * En row: 'justify-content' controla horizontal, 'align-items' vertical.
 * En column: 'justify-content' controla vertical, 'align-items' horizontal.
 */
.d-flex-7 {
    display: flex;
    height: 800px;
    flex-direction: row;
    justify-content: end;
    align-items: center;
}
.d-flex-75 {
    display: flex;
    height: 800px;
    flex-direction: column;
    justify-content: start;
    align-items: end;
}

/** 8. Flex Basis **/
/* 
 * 'flex-basis' define el tamaño inicial de un flex item antes de que se aplique el crecimiento o encogimiento.
 * Aquí, cada .box tendrá un ancho inicial de 200px.
 * 'flex-basis' puede usar cualquier unidad de longitud (px, %, em, etc.).
 */
.d-flex-8 {
    display: flex;
}
.d-flex-8 .box {
    flex-basis: 200px;
}

/** 9. Gap y Calc **/
/* 
 * 'calc()' permite realizar cálculos para determinar valores de propiedades CSS.
 * Aquí se usa para calcular el ancho de los elementos, dejando espacio entre ellos.
 * El primer .box ocupa el 50% menos 1rem, los otros dos 25% menos 1rem cada uno.
 */
.d-flex-9 {
    display: flex; 
    justify-content: space-between; 
}
.d-flex-9 .box:nth-child(1) {
    flex-basis: calc(50% - 1rem);
}
.d-flex-9 .box:nth-child(2),
.d-flex-9 .box:nth-child(3) {
    flex-basis: calc(25% - 1rem);
}

/** 10. Flex Wrap **/
/* 
 * 'flex-wrap: wrap' permite que los flex items se envuelvan a la siguiente línea si no caben en una.
 * Cada .box ocupará un tercio del ancho del contenedor (33.3%).
 * Si no hay suficiente espacio, los items pasarán a la siguiente línea.
 */
.d-flex-10 {
    display: flex; 
    flex-wrap: wrap;
}
.d-flex-10 .box {
    flex-basis: 33.3%;
}

/** 11. Flex Grow **/
/* 
 * 'flex-grow' determina cómo crecen los flex items para ocupar el espacio disponible.
 * Es un número que representa la proporción de espacio extra que tomará el item.
 * El primer .box crecerá el doble que el segundo, y cuatro veces más que el tercero.
 */
.d-flex-11 {
    display: flex; 
}
.d-flex-11 .box:nth-child(1) {
    flex-grow: 2;
}
.d-flex-11 .box:nth-child(2) {
    flex-grow: 1;
}
.d-flex-11 .box:nth-child(3) {
    flex-grow: .5;
}

/** 12. Flex Shrink **/
/* 
 * 'flex-shrink' determina cómo se encogen los flex items cuando no hay suficiente espacio.
 * Un valor mayor significa que el item se encogerá más rápido que los otros.
 * Aquí, el tercer .box se encogerá el doble de rápido que los otros dos.
 */
.d-flex-12 {
    display: flex; 
}
.d-flex-12 .box {
    flex-grow: 1;
    flex-basis: 300px;
}
.d-flex-12 .box:nth-child(3) {
    flex-shrink: 2;
}

/** 13. Flex Shorthand **/
/* 
 * 'flex' es una propiedad abreviada que combina 'flex-grow', 'flex-shrink' y 'flex-basis'.
 * La sintaxis es: flex: [flex-grow] [flex-shrink] [flex-basis]
 * Aquí, cada .box crecerá y se encogerá igualmente, con un tamaño base de 33.3%.
 */
.d-flex-13 {
    display: flex; 
}
.d-flex-13 .box {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 33.3%;
    
    /* Equivalente a las tres líneas anteriores */
    flex: 1 1 33.3%
}